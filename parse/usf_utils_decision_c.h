(TRANSLATION-UNIT (DECLARATION-SEQ (DECLARATION (BLOCK-DECLARATION (SIMPLE-DECLARATION (DECL-SPECIFIER-SEQ-OPT (DECL-SPECIFIER-SEQ (DECL-SPECIFIER62 (TYPE-SPECIFIER (SIMPLE-TYPE-SPECIFIER_INT))))) (INIT-DECLARATOR-LIST (INIT-DECLARATOR (DECLARATOR77 (DIRECT-DECLARATOR (DIRECT-DECLARATOR-FRONT (DECLARATOR-ID81 (DOUBLE-COLON-OPT8) (ID-EXPRESSION4 (UNQUALIFIED-ID7 (IDENT C03::|completeRadioResources_20|))))) (DIRECT-DECLARATOR-END (DIRECT-DECLARATOR-END-ITEM (PARAMETER-DECLARATION-CLAUSE86 (PARAMETER-DECLARATION-LIST-OPT (PARAMETER-DECLARATION-LIST (PARAMETER-DECLARATION88 (DECL-SPECIFIER-SEQ (DECL-SPECIFIER62 (TYPE-SPECIFIER (SIMPLE-TYPE-SPECIFIER69 (DOUBLE-COLON-OPT8) (NESTED-NAME-SPECIFIER-OPT12) (TYPE-NAME-FROM-IDENT (IDENT C03::|pcu_BOOL|)))))) (DECLARATOR (PTR-OPERATOR (CV-QUALIFIER-SEQ-OPT80)) (DECLARATOR77 (DIRECT-DECLARATOR (DIRECT-DECLARATOR-FRONT (DECLARATOR-ID81 (DOUBLE-COLON-OPT8) (ID-EXPRESSION4 (UNQUALIFIED-ID7 (IDENT C03::|retval|))))) (DIRECT-DECLARATOR-END))))) (PARAMETER-DECLARATION88 (DECL-SPECIFIER-SEQ (DECL-SPECIFIER62 (TYPE-SPECIFIER (SIMPLE-TYPE-SPECIFIER69 (DOUBLE-COLON-OPT8) (NESTED-NAME-SPECIFIER-OPT12) (TYPE-NAME-FROM-IDENT (IDENT C03::UINT)))))) (DECLARATOR (PTR-OPERATOR (CV-QUALIFIER-SEQ-OPT80)) (DECLARATOR (PTR-OPERATOR (CV-QUALIFIER-SEQ-OPT80)) (DECLARATOR77 (DIRECT-DECLARATOR (DIRECT-DECLARATOR-FRONT (DECLARATOR-ID81 (DOUBLE-COLON-OPT8) (ID-EXPRESSION4 (UNQUALIFIED-ID7 (IDENT C03::|requestedResources|))))) (DIRECT-DECLARATOR-END)))))) (PARAMETER-DECLARATION88 (DECL-SPECIFIER-SEQ (DECL-SPECIFIER62 (TYPE-SPECIFIER (SIMPLE-TYPE-SPECIFIER69 (DOUBLE-COLON-OPT8) (NESTED-NAME-SPECIFIER-OPT12) (TYPE-NAME-FROM-IDENT (IDENT C03::|P_RA_RESOURCES_t|)))))) (DECLARATOR (PTR-OPERATOR (CV-QUALIFIER-SEQ-OPT80)) (DECLARATOR77 (DIRECT-DECLARATOR (DIRECT-DECLARATOR-FRONT (DECLARATOR-ID81 (DOUBLE-COLON-OPT8) (ID-EXPRESSION4 (UNQUALIFIED-ID7 (IDENT C03::|pRsc|))))) (DIRECT-DECLARATOR-END))))) (PARAMETER-DECLARATION88 (DECL-SPECIFIER-SEQ (DECL-SPECIFIER62 (TYPE-SPECIFIER (SIMPLE-TYPE-SPECIFIER69 (DOUBLE-COLON-OPT8) (NESTED-NAME-SPECIFIER-OPT12) (TYPE-NAME-FROM-IDENT (IDENT C03::U32)))))) (DECLARATOR (PTR-OPERATOR (CV-QUALIFIER-SEQ-OPT80)) (DECLARATOR77 (DIRECT-DECLARATOR (DIRECT-DECLARATOR-FRONT (DECLARATOR-ID81 (DOUBLE-COLON-OPT8) (ID-EXPRESSION4 (UNQUALIFIED-ID7 (IDENT C03::|bestTsMap|))))) (DIRECT-DECLARATOR-END))))) (PARAMETER-DECLARATION88 (DECL-SPECIFIER-SEQ (DECL-SPECIFIER62 (TYPE-SPECIFIER (SIMPLE-TYPE-SPECIFIER69 (DOUBLE-COLON-OPT8) (NESTED-NAME-SPECIFIER-OPT12) (TYPE-NAME-FROM-IDENT (IDENT C03::|P_BW_SHARING_t|)))))) (DECLARATOR (PTR-OPERATOR (CV-QUALIFIER-SEQ-OPT80)) (DECLARATOR77 (DIRECT-DECLARATOR (DIRECT-DECLARATOR-FRONT (DECLARATOR-ID81 (DOUBLE-COLON-OPT8) (ID-EXPRESSION4 (UNQUALIFIED-ID7 (IDENT C03::|pUpBws|))))) (DIRECT-DECLARATOR-END))))) (PARAMETER-DECLARATION88 (DECL-SPECIFIER-SEQ (DECL-SPECIFIER62 (TYPE-SPECIFIER (SIMPLE-TYPE-SPECIFIER69 (DOUBLE-COLON-OPT8) (NESTED-NAME-SPECIFIER-OPT12) (TYPE-NAME-FROM-IDENT (IDENT C03::|P_PIPE_t|)))))) (DECLARATOR (PTR-OPERATOR (CV-QUALIFIER-SEQ-OPT80)) (DECLARATOR77 (DIRECT-DECLARATOR (DIRECT-DECLARATOR-FRONT (DECLARATOR-ID81 (DOUBLE-COLON-OPT8) (ID-EXPRESSION4 (UNQUALIFIED-ID7 (IDENT C03::|insteadOf|))))) (DIRECT-DECLARATOR-END))))) (PARAMETER-DECLARATION88 (DECL-SPECIFIER-SEQ (DECL-SPECIFIER62 (TYPE-SPECIFIER (SIMPLE-TYPE-SPECIFIER69 (DOUBLE-COLON-OPT8) (NESTED-NAME-SPECIFIER-OPT12) (TYPE-NAME-FROM-IDENT (IDENT C03::|P_RA_TRX_t|)))))) (DECLARATOR (PTR-OPERATOR (CV-QUALIFIER-SEQ-OPT80)) (DECLARATOR77 (DIRECT-DECLARATOR (DIRECT-DECLARATOR-FRONT (DECLARATOR-ID81 (DOUBLE-COLON-OPT8) (ID-EXPRESSION4 (UNQUALIFIED-ID7 (IDENT C03::|pTrx|))))) (DIRECT-DECLARATOR-END))))) (PARAMETER-DECLARATION88 (DECL-SPECIFIER-SEQ (DECL-SPECIFIER62 (TYPE-SPECIFIER (SIMPLE-TYPE-SPECIFIER_INT)))) (DECLARATOR (PTR-OPERATOR (CV-QUALIFIER-SEQ-OPT80)) (DECLARATOR77 (DIRECT-DECLARATOR (DIRECT-DECLARATOR-FRONT (DECLARATOR-ID81 (DOUBLE-COLON-OPT8) (ID-EXPRESSION4 (UNQUALIFIED-ID7 (IDENT C03::|i|))))) (DIRECT-DECLARATOR-END))))) (PARAMETER-DECLARATION88 (DECL-SPECIFIER-SEQ (DECL-SPECIFIER62 (TYPE-SPECIFIER (SIMPLE-TYPE-SPECIFIER69 (DOUBLE-COLON-OPT8) (NESTED-NAME-SPECIFIER-OPT12) (TYPE-NAME-FROM-IDENT (IDENT C03::|P_PIPE_t|)))))) (DECLARATOR (PTR-OPERATOR (CV-QUALIFIER-SEQ-OPT80)) (DECLARATOR77 (DIRECT-DECLARATOR (DIRECT-DECLARATOR-FRONT (DECLARATOR-ID81 (DOUBLE-COLON-OPT8) (ID-EXPRESSION4 (UNQUALIFIED-ID7 (IDENT C03::|pPipe|))))) (DIRECT-DECLARATOR-END))))) (PARAMETER-DECLARATION88 (DECL-SPECIFIER-SEQ (DECL-SPECIFIER62 (TYPE-SPECIFIER (SIMPLE-TYPE-SPECIFIER69 (DOUBLE-COLON-OPT8) (NESTED-NAME-SPECIFIER-OPT12) (TYPE-NAME-FROM-IDENT (IDENT C03::|P_CELL_t|)))))) (DECLARATOR (PTR-OPERATOR (CV-QUALIFIER-SEQ-OPT80)) (DECLARATOR77 (DIRECT-DECLARATOR (DIRECT-DECLARATOR-FRONT (DECLARATOR-ID81 (DOUBLE-COLON-OPT8) (ID-EXPRESSION4 (UNQUALIFIED-ID7 (IDENT C03::|pCell|))))) (DIRECT-DECLARATOR-END))))))) (DOTDOTDOT-OPT85)) (CV-QUALIFIER-SEQ-OPT80) (EXCEPTION-SPECIFICATION-OPT120))))) (INITIALIZER-OPT76)))))))) 
